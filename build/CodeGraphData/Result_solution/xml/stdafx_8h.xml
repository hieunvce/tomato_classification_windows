<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="stdafx_8h" kind="file">
    <compoundname>stdafx.h</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">tchar.h</includes>
    <includes local="no">iostream</includes>
    <includes local="no">string</includes>
    <includes local="no">opencv2/opencv.hpp</includes>
    <includes refid="targetver_8h" local="yes">targetver.h</includes>
    <includedby refid="stdafx_8cpp" local="yes">C:/Users/Henry/Documents/GitHub/tomato_classification/stdafx.cpp</includedby>
    <incdepgraph>
      <node id="51">
        <label>SDKDDKVer.h</label>
      </node>
      <node id="49">
        <label>opencv2/opencv.hpp</label>
      </node>
      <node id="48">
        <label>string</label>
      </node>
      <node id="50">
        <label>targetver.h</label>
        <link refid="targetver_8h"/>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>iostream</label>
      </node>
      <node id="46">
        <label>tchar.h</label>
      </node>
      <node id="45">
        <label>stdio.h</label>
      </node>
      <node id="44">
        <label>C:/Users/Henry/Documents/GitHub/tomato_classification/stdafx.h</label>
        <link refid="stdafx.h"/>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="53">
        <label>C:/Users/Henry/Documents/GitHub/tomato_classification/stdafx.cpp</label>
        <link refid="stdafx_8cpp"/>
      </node>
      <node id="52">
        <label>C:/Users/Henry/Documents/GitHub/tomato_classification/stdafx.h</label>
        <link refid="stdafx.h"/>
        <childnode refid="53" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="stdafx_8h_1a99c61b668f2c985a746185e8ac43d713" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool isRed</definition>
        <argsstring>(int a, int b)</argsstring>
        <name>isRed</name>
        <param>
          <type>int</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Henry/Documents/GitHub/tomato_classification/stdafx.h" line="15" column="1"/>
      </memberdef>
      <memberdef kind="function" id="stdafx_8h_1a087ec42dbd99469d202c211d11130fc1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool isGreen</definition>
        <argsstring>(int a, int b)</argsstring>
        <name>isGreen</name>
        <param>
          <type>int</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Henry/Documents/GitHub/tomato_classification/stdafx.h" line="16" column="1"/>
      </memberdef>
      <memberdef kind="function" id="stdafx_8h_1aa67290d65454a077f12e192b87e6e6c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool isYellow</definition>
        <argsstring>(int a, int b)</argsstring>
        <name>isYellow</name>
        <param>
          <type>int</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Henry/Documents/GitHub/tomato_classification/stdafx.h" line="17" column="1"/>
      </memberdef>
      <memberdef kind="function" id="stdafx_8h_1ab680a8f6559f6fecce57ef518eec8ad3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int findColorID</definition>
        <argsstring>(Mat LabImage)</argsstring>
        <name>findColorID</name>
        <param>
          <type>Mat</type>
          <declname>LabImage</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Henry/Documents/GitHub/tomato_classification/stdafx.h" line="20" column="1"/>
      </memberdef>
      <memberdef kind="function" id="stdafx_8h_1a8cd4712ecdde913afc1f3246f24ac0bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Mat</type>
        <definition>Mat segmentByColorID</definition>
        <argsstring>(Mat srcImage, int colorID)</argsstring>
        <name>segmentByColorID</name>
        <param>
          <type>Mat</type>
          <declname>srcImage</declname>
        </param>
        <param>
          <type>int</type>
          <declname>colorID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Henry/Documents/GitHub/tomato_classification/stdafx.h" line="21" column="1"/>
      </memberdef>
      <memberdef kind="function" id="stdafx_8h_1a22d6ba6b1258e07fa04caa2b79b614b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>RotatedRect</type>
        <definition>RotatedRect detectROI</definition>
        <argsstring>(Mat segImage)</argsstring>
        <name>detectROI</name>
        <param>
          <type>Mat</type>
          <declname>segImage</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>detectROI: Detect ROI which have tomato in image It returns a contour is the ROI. Return vector&lt;Point&gt; <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>segImage</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Henry/Documents/GitHub/tomato_classification/stdafx.h" line="24" column="1" bodyfile="C:/Users/Henry/Documents/GitHub/tomato_classification/function.cpp" bodystart="69" bodyend="99"/>
        <referencedby refid="function_8h_1a1d36cded4b486b32db5ae04d3c01eeff" compoundref="function_8cpp" startline="242" endline="283">runOnImage</referencedby>
      </memberdef>
      <memberdef kind="function" id="stdafx_8h_1a3521376f7e0121902beb483153bd0e72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int runOnCamera</definition>
        <argsstring>()</argsstring>
        <name>runOnCamera</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Henry/Documents/GitHub/tomato_classification/stdafx.h" line="27" column="1"/>
      </memberdef>
      <memberdef kind="function" id="stdafx_8h_1a89ac890fe78ff1b0566612c594d1b079" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Mat</type>
        <definition>Mat runOnAnImage</definition>
        <argsstring>(Mat srcImage)</argsstring>
        <name>runOnAnImage</name>
        <param>
          <type>Mat</type>
          <declname>srcImage</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Henry/Documents/GitHub/tomato_classification/stdafx.h" line="28" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight></codeline>
<codeline lineno="3"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;tchar.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;opencv2/opencv.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="targetver_8h" kindref="compound">targetver.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">cv;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Check<sp/>color</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="stdafx_8h_1a99c61b668f2c985a746185e8ac43d713" kindref="member">isRed</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="stdafx_8h_1a087ec42dbd99469d202c211d11130fc1" kindref="member">isGreen</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="stdafx_8h_1aa67290d65454a077f12e192b87e6e6c5" kindref="member">isYellow</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Segment<sp/>image<sp/>in<sp/>L*a*b*<sp/>color<sp/>space</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="stdafx_8h_1ab680a8f6559f6fecce57ef518eec8ad3" kindref="member">findColorID</ref>(Mat<sp/>LabImage);</highlight></codeline>
<codeline lineno="21"><highlight class="normal">Mat<sp/><ref refid="stdafx_8h_1a8cd4712ecdde913afc1f3246f24ac0bc" kindref="member">segmentByColorID</ref>(Mat<sp/>srcImage,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>colorID);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Detect<sp/>ROI<sp/>of<sp/>Tomato</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal">RotatedRect<sp/><ref refid="stdafx_8h_1a22d6ba6b1258e07fa04caa2b79b614b0" kindref="member">detectROI</ref>(Mat<sp/>segImage);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Main<sp/>program</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="stdafx_8h_1a3521376f7e0121902beb483153bd0e72" kindref="member">runOnCamera</ref>();</highlight></codeline>
<codeline lineno="28"><highlight class="normal">Mat<sp/><ref refid="stdafx_8h_1a89ac890fe78ff1b0566612c594d1b079" kindref="member">runOnAnImage</ref>(Mat<sp/>srcImage);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/Users/Henry/Documents/GitHub/tomato_classification/stdafx.h"/>
  </compounddef>
</doxygen>
